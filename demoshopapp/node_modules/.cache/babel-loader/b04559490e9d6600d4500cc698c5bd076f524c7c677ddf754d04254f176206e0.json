{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React\\\\demoshopapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport NewNav from './Components/NewNav';\nimport TextArea from './Components/TextArea';\nimport Alert from './Components/Alert';\nimport React, { useState } from 'react';\nimport Card from './Components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [DarkMode, StateDarkMode] = useState('gray-200 text-black');\n  const [DarkWhiteText, StateDarkWhiteText] = useState('Enable Dark Mode');\n  const [AlertMessage, SetAlertMessage] = useState('', 100);\n  const Set_Alert = (Message, Type) => {\n    SetAlertMessage({\n      MSG: Message,\n      TYP: Type\n    });\n    setTimeout(() => {\n      SetAlertMessage(null);\n    }, 1200);\n  };\n  const ToggleDisplay = () => {\n    if (DarkMode === 'gray-200 text-black') {\n      StateDarkMode('black text-white');\n      document.body.style.backgroundColor = '#18101F';\n      Set_Alert('Now you are in light mode', 'Success');\n    } else {\n      document.body.style.backgroundColor = '#E6CAFF';\n      StateDarkMode('gray-200 text-black');\n      Set_Alert('Now you are in dark mode', 'Success');\n    }\n    ChangeText();\n  };\n  const ChangeText = () => {\n    if (DarkWhiteText === 'Enable Dark Mode') {\n      StateDarkWhiteText('Enable Light Mode');\n    } else {\n      StateDarkWhiteText('Enable Dark Mode');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNav, {\n      Mode: DarkMode,\n      ToggleMode: ToggleDisplay,\n      Text: DarkWhiteText,\n      className: \"relative\",\n      Message: AlertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      Message: AlertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      Mode: DarkMode,\n      Set_Alert: Set_Alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1c4Oj33bRsGV9R+vAaysZFVaExQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","NewNav","TextArea","Alert","React","useState","Card","jsxDEV","_jsxDEV","App","_s","DarkMode","StateDarkMode","DarkWhiteText","StateDarkWhiteText","AlertMessage","SetAlertMessage","Set_Alert","Message","Type","MSG","TYP","setTimeout","ToggleDisplay","document","body","style","backgroundColor","ChangeText","children","Mode","ToggleMode","Text","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/React/demoshopapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport NewNav from './Components/NewNav';\r\nimport TextArea from './Components/TextArea';\r\nimport Alert from './Components/Alert';\r\nimport React, { useState } from 'react';\r\nimport Card from './Components/Card';\r\n\r\n\r\nfunction App() {\r\n  const [DarkMode, StateDarkMode] = useState('gray-200 text-black');\r\n  const [DarkWhiteText, StateDarkWhiteText] = useState('Enable Dark Mode');\r\n  const [AlertMessage, SetAlertMessage] = useState('', 100); \r\n\r\n  const Set_Alert = (Message, Type) =>\r\n  {\r\n    SetAlertMessage(\r\n      {\r\n        MSG : Message,\r\n        TYP : Type\r\n      }\r\n    )\r\n    setTimeout(() => {\r\n      SetAlertMessage(null);\r\n    }, 1200);\r\n  }\r\n\r\n  const ToggleDisplay = () => {\r\n    if (DarkMode === 'gray-200 text-black') {\r\n      StateDarkMode('black text-white');\r\n      document.body.style.backgroundColor = '#18101F';\r\n      Set_Alert('Now you are in light mode', 'Success');\r\n    }\r\n    else {\r\n      document.body.style.backgroundColor = '#E6CAFF';\r\n      StateDarkMode('gray-200 text-black');\r\n      Set_Alert('Now you are in dark mode', 'Success');\r\n    }\r\n    ChangeText();\r\n  }\r\n\r\n  const ChangeText = () => {\r\n    if(DarkWhiteText === 'Enable Dark Mode')\r\n    {\r\n      StateDarkWhiteText('Enable Light Mode');\r\n    }\r\n    else\r\n    {\r\n      StateDarkWhiteText('Enable Dark Mode');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NewNav Mode={DarkMode} ToggleMode={ToggleDisplay} Text={DarkWhiteText} className='relative' Message={AlertMessage}></NewNav>\r\n      {/* <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch> */}\r\n      <Alert Message={AlertMessage}></Alert>\r\n      <TextArea Mode={DarkMode} Set_Alert={Set_Alert}></TextArea>\r\n      <Card></Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,qBAAqB,CAAC;EACjE,MAAM,CAACQ,aAAa,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,kBAAkB,CAAC;EACxE,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC;EAEzD,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAChC;IACEH,eAAe,CACb;MACEI,GAAG,EAAGF,OAAO;MACbG,GAAG,EAAGF;IACR,CACF,CAAC;IACDG,UAAU,CAAC,MAAM;MACfN,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIZ,QAAQ,KAAK,qBAAqB,EAAE;MACtCC,aAAa,CAAC,kBAAkB,CAAC;MACjCY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CV,SAAS,CAAC,2BAA2B,EAAE,SAAS,CAAC;IACnD,CAAC,MACI;MACHO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/Cf,aAAa,CAAC,qBAAqB,CAAC;MACpCK,SAAS,CAAC,0BAA0B,EAAE,SAAS,CAAC;IAClD;IACAW,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAGf,aAAa,KAAK,kBAAkB,EACvC;MACEC,kBAAkB,CAAC,mBAAmB,CAAC;IACzC,CAAC,MAED;MACEA,kBAAkB,CAAC,kBAAkB,CAAC;IACxC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACP,MAAM;MAAC6B,IAAI,EAAEnB,QAAS;MAACoB,UAAU,EAAER,aAAc;MAACS,IAAI,EAAEnB,aAAc;MAACoB,SAAS,EAAC,UAAU;MAACf,OAAO,EAAEH;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAY7H7B,OAAA,CAACL,KAAK;MAACe,OAAO,EAAEH;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtC7B,OAAA,CAACN,QAAQ;MAAC4B,IAAI,EAAEnB,QAAS;MAACM,SAAS,EAAEA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC3D7B,OAAA,CAACF,IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAAC3B,EAAA,CA9DQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}